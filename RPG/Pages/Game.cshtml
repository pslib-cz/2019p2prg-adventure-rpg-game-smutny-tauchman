@page
@model RPG.Pages.Game
@{ ViewData["Title"] = "setKeyLocation";
}

<div class="container">
    <div class="row">
        <div class="col-6">
            @if (Model.index == 14 && Model.gameState.Key == true)
            {
                <audio autoplay>
                    <source src="~/audio/doorsound.mp3" type="audio/mp3">
                </audio>
                <p>Klíč se v zámku zahýbal a dveře se po zatáhnutí za kliku daly do pohybu. Jsi volný!</p>
                <a href="@Url.Page("./Index")"><button class="btn btn-outline-dark">Začít znovu</button></a>
            }
            @{ else if (Model.gameState.HP == 0)
                {
                    <audio autoplay>
                        <source src="~/audio/death.mp3" type="audio/mp3">
                    </audio>
                    <p>Tak tohle zabolelo. Poslechni si boží píseň a zkus to znovu.</p>

                    <a href="@Url.Page("./Index")"><button class="btn btn-outline-dark">Začít znovu</button></a>
                }
            }
            @{ else
                {
                    <p>@Model.rooms[Model.index].description</p>
                    @if (Model.index == Model._ss.getKeyLocation() && Model.rooms[Model.index].raided == false)
                    {
                        <audio autoplay>
                            <source src="~/audio/keysSoundEffect.mp3" type="audio/mp3">
                        </audio>
                        <p>Našel jsi klíč, nyní se pokus najít dveře ven.</p>
                    }
                    @if (Model.rooms[@Model.index].containsMap && Model.rooms[Model.index].raided == false)
                    {
                        <p>Našel jsi mapu!</p>
                        <audio autoplay>
                            <source src="~/audio/mapSound.mp3" type="audio/mp3">
                        </audio>
                    }


                    <form method="post">
                        @for (int i = 0; i < @Model.rooms[Model.index].rooms.Length; i++)
                        {
                            <div class="form-check">
                                <input type="hidden" asp-for="@Model.key" value="@Model.key" />
                                <label class="form-check-label" asp-for="@Model.index">
                                    <button class="btn btn-outline-dark m-1" type="submit" name="index" value="@Model.rooms[Model.rooms[Model.index].rooms[i]].id">@Model.rooms[Model.rooms[Model.index].rooms[i]].button</button>
                                </label>
                            </div>
                        }
                    </form>

                }
        
        }
        </div>
        <div class="col-6">
            @if (Model.gameState.Map)
            {
                <img src='~/img/maps/@Model.index .png' class="map" />
            }
            else
            {
                <img src="~/img/maps/15.png" class="map"/>
            }
        </div>
    </div>
</div>
                @if (Model.rooms[Model.index].containsEnemy == true && Model.rooms[Model.index].raided == false)
                {
                    <img src="~/img/jumpscare.jpg" class="animated fadeOut jumpscare animated.delay-3s" id="jumpscare">
                    <audio autoplay id="jeff">
                        <source src="~/audio/jumpscare.mp3" type="audio/mp3">
                    </audio>

                    <script>
                        document.getElementById("jeff").volume = 0.6;
                        const sleep = (milliseconds) => {
                            return new Promise(resolve => setTimeout(resolve, milliseconds))
                        }
                        sleep(1000).then(() => {
                            let image = document.getElementById('jumpscare');
                            image.parentNode.removeChild(image);
                        })
                    </script>

                }

